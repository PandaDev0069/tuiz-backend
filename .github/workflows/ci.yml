name: CI
permissions:
  contents: read

on:
  push:
    branches: [main, develop, feat/*]
  pull_request:
    branches: [main, develop]

jobs:
  # Critical tests - always run
  critical-tests:
    name: Critical Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Type check
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Run critical tests
        run: npx ts-node scripts/ci-test-runner.ts --strategy PR
        env:
          NODE_ENV: test
          CI: true
          # Supabase environment variables - use secrets if available, fallback to dummy for CI
          SUPABASE_URL: ${{ secrets.SUPABASE_URL || 'https://dummy.supabase.co' }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY || 'dummy-anon-key-for-ci' }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || 'dummy-service-role-key-for-ci' }}

  # Unit tests - fast, no external dependencies
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run unit tests
        run: npx ts-node scripts/ci-test-runner.ts --strategy LOCAL
        env:
          NODE_ENV: test
          CI: true
          # Use dummy credentials for unit tests
          SUPABASE_URL: 'https://dummy.supabase.co'
          SUPABASE_ANON_KEY: 'dummy-anon-key-for-ci'
          SUPABASE_SERVICE_ROLE_KEY: 'dummy-service-role-key-for-ci'

  # Integration tests - only on main branch and PRs to main
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.ref == 'refs/heads/main' || github.base_ref == 'main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run integration tests
        run: npx ts-node scripts/ci-test-runner.ts --strategy MAIN_PUSH
        env:
          NODE_ENV: test
          CI: true
          # Supabase environment variables - required for integration tests
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        continue-on-error: true # Don't fail the whole CI if integration tests have issues

  # Build test - ensure code compiles
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build
        run: npm run build
        env:
          # Use dummy credentials for build
          SUPABASE_URL: 'https://dummy.supabase.co'
          SUPABASE_ANON_KEY: 'dummy-anon-key-for-ci'
          SUPABASE_SERVICE_ROLE_KEY: 'dummy-service-role-key-for-ci'

      - name: Verify build output
        run: |
          test -f dist/server.js
          test -d dist/routes
          test -d dist/lib
